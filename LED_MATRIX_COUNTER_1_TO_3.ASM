;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Copyright (c) 2013 Manolis Agkopian	      ;
;See the file LICENCE for copying permission. ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PROCESSOR 16F876A
	INCLUDE <P16F876A.INC>

	__config _XT_OSC & _WDT_OFF & _PWRTE_OFF & _CP_OFF & _LVP_OFF & _BODEN_OFF

;THE MATRIX ROWS FOR DISPLAY
R0 EQU 0x20
R1 EQU 0x21
R2 EQU 0x22
R3 EQU 0x23
R4 EQU 0x24
R5 EQU 0x25
R6 EQU 0x26
R7 EQU 0x27

CNT0 EQU 0x28
CNT1 EQU 0x29
CNT2 EQU 0x2A
CNT3 EQU 0x2B
CNT4 EQU 0x2C

	ORG 0x00
INIT:
	BSF STATUS, 5
	CLRF TRISB ;ROWS
	CLRF TRISC ;COLS
	BCF STATUS, 5
	
	CLRF PORTB
	CLRF PORTC

MAIN:
	
AGAIN:
	CALL MATRIX_SET_A ;SET THE CHARACTER WE WANT TO DISPLAY
	CALL MATRIX_WRITE_1S ;WRITE IT TO THE LED MATRIX
	CALL MATRIX_SET_B ;SET THE CHARACTER WE WANT TO DISPLAY
	CALL MATRIX_WRITE_1S ;WRITE IT TO THE LED MATRIX
	CALL MATRIX_SET_C ;SET THE CHARACTER WE WANT TO DISPLAY
	CALL MATRIX_WRITE_1S ;WRITE IT TO THE LED MATRIX
	GOTO AGAIN

MATRIX_SET_A:
	;SET BITS FOR CHAR '1'
	MOVLW B'00000000'
	MOVWF R0
	MOVLW B'00001000'
	MOVWF R1
	MOVLW B'00011000'
	MOVWF R2
	MOVLW B'00001000'
	MOVWF R3
	MOVLW B'00001000'
	MOVWF R4
	MOVLW B'00001000'
	MOVWF R5
	MOVLW B'00001000'
	MOVWF R6
	MOVLW B'00011100'
	MOVWF R7

	RETURN

MATRIX_SET_B:
	;SET BITS FOR CHAR '2'
	MOVLW B'00000000'
	MOVWF R0
	MOVLW B'00011100'
	MOVWF R1
	MOVLW B'00100010'
	MOVWF R2
	MOVLW B'00000010'
	MOVWF R3
	MOVLW B'00000100'
	MOVWF R4
	MOVLW B'00001000'
	MOVWF R5
	MOVLW B'00010000'
	MOVWF R6
	MOVLW B'00111110'
	MOVWF R7

	RETURN

MATRIX_SET_C:
	;SET BITS FOR CHAR '3'
	MOVLW B'00000000'
	MOVWF R0
	MOVLW B'00111110'
	MOVWF R1
	MOVLW B'00000100'
	MOVWF R2
	MOVLW B'00001000'
	MOVWF R3
	MOVLW B'00000100'
	MOVWF R4
	MOVLW B'00000010'
	MOVWF R5
	MOVLW B'00100010'
	MOVWF R6
	MOVLW B'00011100'
	MOVWF R7

	RETURN

MATRIX_CLEAR:
	;SET BITS TO 0
	MOVLW B'00000000'
	MOVWF R0
	MOVLW B'00000000'
	MOVWF R1
	MOVLW B'00000000'
	MOVWF R2
	MOVLW B'00000000'
	MOVWF R3
	MOVLW B'00000000'
	MOVWF R4
	MOVLW B'00000000'
	MOVWF R5
	MOVLW B'00000000'
	MOVWF R6
	MOVLW B'00000000'
	MOVWF R7
	CALL MATRIX_WRITE ;DO CLEAR MATRIX
	CALL MATRIX_SET_A ;SET PREVIEUS CHAR

	RETURN

MATRIX_WRITE:
	MOVLW 0x20 ;ADDRESS OF FIRTS ROW BITS
	MOVWF FSR
	MOVLW 0x08 ;FOR 8 ROWS
	MOVWF CNT1

	MOVLW B'11111111'
	MOVWF PORTC

	BCF STATUS, 0 ;INSERT THE ROW SELECT BIT INTO CARRY
NEXT_ROW:
	MOVF INDF, W
	RLF PORTC ;SELECT NEXT ROW
	MOVWF PORTB
	CALL DELAY
	INCF FSR ;SELECT NEXT ROW BITS
	DECFSZ CNT1
	GOTO NEXT_ROW

	RETURN

DELAY:
	MOVLW 0xFF
	MOVWF CNT0
D0:
	DECFSZ CNT0
	GOTO D0
	RETURN

DELAY_1S:
	MOVLW 0xFF
	MOVWF CNT1
D2:
	MOVLW 0xFF
	MOVWF CNT0
D1:
	DECFSZ CNT0
	GOTO D1

	DECFSZ CNT1
	GOTO D2

	RETURN

MATRIX_WRITE_1S:
	MOVLW 0xA0
	MOVWF CNT2
D00:
	CALL MATRIX_WRITE
	DECFSZ CNT2
	GOTO D00

	RETURN

MATRIX_CLEAR_1S:
	MOVLW 0xA0
	MOVWF CNT2
D000:
	CALL MATRIX_CLEAR
	DECFSZ CNT2
	GOTO D000

	RETURN

	END